HelpScribble project file.
16
Srzgbfbsg arpuabybtvrf-22O5O78
0
2
FROG


Copyright ©
TRUE
0x0409   English (U.S.)
.,C:\workspace\FROG\doc
1
BrowseButtons()
0
FALSE

FALSE
TRUE
16777215
0
16711680
8388736
255
FALSE
FALSE
FALSE
FALSE
150
50
600
500
TRUE
FALSE
1
FALSE
FALSE
Contents
%s Contents
Index
%s Index
Previous
Next
FALSE

43
1
FROGAlgorithm_calibations
FROG Algorithm Calibrations
Data source;FROG Algorithms Calibrations Window;Grid Size;Optical Nonlinearity



Imported



FALSE
32
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Algorithm Calibrations\cf0\fs24 
\par 
\par \fs20 After starting FROG, The left side of the FROG Algorithm Calibrations window allows you to set three parameters that control the global behavior of the FROG algorithm.  These parameters are the Nonlinearity (NLO), the Data Source, and the Grid Size.
\par 
\par Once the algorithm parameters have been entered, click OK, and the \strike FROG Pulse Retrieval\strike0\{linkID=27\} screens will appear.
\par 
\par \fs24 
\par \b\fs28 Nonlinearity (NLO)\b0\fs24 
\par \fs20 
\par Select the type of \strike optical nonlinearity\strike0\{linkID=8\} used to generate the FROG trace from the electric field.  \fs24 
\par 
\par \cf2\b\fs28\{target=DataSource\}\cf0 Data Source\b0\fs24 
\par \fs20 
\par The Data Source radio buttons allow the user to select the source of the original field and/or FROG trace.  Selecting a different data source will present different tabs on the right-hand side of the screen to set the behavior of the FROG algorithm.  There are three choices for Data Source:
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Generate from Theory\strike0\{linkID=18\} - allows the user to supply parameters such as pulse width, chirp, etc., that the FROG program then uses to generate the laser pulse and the FROG trace.\fs24 
\par \fs20 
\par \strike Experimental FROG Trace\strike0\{linkID=19\} - reads in a FROG trace from disk.  Use this to analyze experimentally generated data.\fs24 
\par \fs20 
\par \strike Read In Field from File\strike0\{linkID=2\} - reads in an electric field from disk.  Use this to create FROG traces of electric fields that are stored in a file.  These fields can be created by the FROG program, or by any other program.\fs24 
\par \pard\fs20 
\par \fs24 
\par \cf2\{target=GridSize\}\cf0\b\fs28 Grid Size\b0\fs24 
\par \fs20 
\par Select the number of points \i\f1 N\i0\f0  used to generate the FROG trace.  Usually a value of 64 or 128 is sufficient.  As \i\f1 N\i0\f0  increases, pulses of larger complexity can be represented on the FROG trace without being truncated.  A transform-limited Gaussian pulse barely fits on an \i\f1 N\i0\f0  = 16 size trace.  However, remember that the speed of the algorithm decreases line \i N\i0 *\i N\i0 *ln(\i N\i0 ), so that doubling the number of points reduces the speed of the algorithm by more than a factor of 4.  It is thus wise to run with as small a number of points as possible.
\par 
\par The \strike maximum time-bandwidth product\strike0\{linkID=16\} pulses that can fit on a FROG trace with a given grid size are reported elsewhere.
\par 
\par 
\par }
2
Read_In_Field
Read In Field
Data source;Data source,read-in field;Read In Field



Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Read-In Field\cf0\fs24 
\par \fs20 
\par This Data Source option uses an electric field stored on disk to be used as the initial field in the FROG program.  The FROG trace generated by this field serves as the target FROG trace.
\par 
\par \{bmc bm35.SHG\}
\par 
\par Selecting Read-in E field from File presents the user with four tabs to control the execution of the FROG algorithm.
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Input Data\strike0\{linkID=25\} - selects the input file that holds the electric field, and its calibrations.
\par 
\par \strike Outputs\strike0\{linkID=22\} - selects the directory for the output files of the program.
\par 
\par \strike First Guess\strike0\{linkID=23\} - selects the field to be used as the starting field for the retrieval.
\par 
\par \strike Strategies\strike0\{linkID=24\} - controls the strategies used by the FROG retrieval algorithm.\fs24 
\par 
\par }
3
Main_Window
Main Window
Default Window Positions;Main Window;Window Positions



Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Main Window\cf0\fs24 
\par 
\par \fs20 Near the top left of the main window, there are three small buttons that can be used to start the various algorithms.  These buttons perform the same action as the menu items under the "Run" menu.  If you purchased a version of FROG without TADPOLE or XFROG, some of these buttons may be missing.
\par 
\par \{bmc bm26.SHG\}
\par 
\par The button labeled "F" starts the \strike FROG algorithm\strike0\{linkID=1\}.
\par 
\par The button labeled "L" shows a \strike log\strike0\{linkID=32\} of all the FROG retrievals since the program was started.
\par 
\par The button labeled "T" starts the \strike TADPOLE algorithm\strike0\{linkID=35\}.
\par 
\par The button labeled "X" starts the \strike XFROG algorithm\strike0\{linkID=46\}.
\par \fs24 
\par \pard\sb115\b\fs20 Windows menu item\b0\fs24 
\par \pard 
\par \fs20 The Windows menu item allows the user to switch between custom window positions and default window positions.  The FROG program will remember the positions (and sizes) of most of the windows in the program.  It will save these positions and sizes, and use them as the default values.  If the user wishes to return to the default values that ship with the FROG program, select "Use Default Positions" from the Window menu.  The windows will appear in their default positions, and thereafter the program will use those default positions.  The user can return to specifying custom window positions by selecting "Use Custom Positions" from the Window menu.\fs24 
\par 
\par }
4
Results_Window
Results Window
Laplacian Time-Bandwidth Product;Minimum Time-Bandwidth Products;Results Window;Time-bandwidth Products;Width



Imported



FALSE
48
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Results Window\cf0\fs24 
\par 
\par \fs20 While the algorithm is retrieving a pulse, the Results window appears.  This window displays the various widths and time-bandwidth products of the pulses.  For retrievals with an original electric field that is known (Theoretical or Read-in\f1  \cf2\strike Data Source\cf3\strike0\{linkTarget=DataSource\}\cf0\f0 ), the results for the original field are shown as soon as the field is specified.  The parameters of the retrieved field are calculated after the Stop button in \strike Algorithm Control\strike0\{linkID=6\} is pressed.
\par 
\par \cf3\{bmc bm37.BMP\}\cf0 
\par \fs24 
\par \b\fs28 Temporal and Spectral Widths\b0\fs24 
\par \fs20 
\par The various widths of the field are calculated using the full width at half-maximum (FWHM).  Be aware that for pulses with complex shapes, this number may be close to meaningless.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Temporal FWHM\b0  - displays the FWHM of the intensity of the field in the time domain.
\par 
\par \b Spectral FWHM\b0  - displays the FWHM of the spectral intensity.  (This is now calculated exactly - no first order approximation in converting from width in frequency to width in wavelength).
\par 
\par \b Autocorrelation FWHM\b0  - the program calculates the autocorrelation and its FWHM for comparison to standard autocorrelation measurements.\fs24 
\par \pard\fs20 
\par \fs24 
\par \b\fs28 Time-Bandwidth Products\b0\fs24 
\par \fs20 
\par Time-bandwidth products (TBP) are a convenient way of measuring the complexity and amount of phase distortion on a pulse.  The FROG program provides several types of time-bandwidth measures.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 FWHM\b0  - this is the classic way to measure time-bandwidth.  For pulses with smooth, Gaussian-like intensity profiles, this measure is fairly significant.  However, for more complicated pulses, it quickly loses its relevance.
\par 
\par \b RMS\b0  - The rms time-bandwidth product provides a better measure of pulse complexity than the FWHM.  Whereas the FWHM TBP can take on almost any value, the rms TBP has an absolute minimum of 0.5 for transform-limited Gaussian pulses.\fs24 
\par \pard 
\par \b\fs28 Laplacian Time-Bandwidth Products\b0\fs24 
\par \fs20 
\par One of the questions often asked about a femtosecond laser pulse is "how far is it from the transform limit?"  For a Gaussian pulse with linear chirp this question can be answered definitively and quantitatively, and the answer provides nearly all that we need to know about the pulse.  However, for a more complex pulse, the question cannot be answered so easily.  The reason is that for a pulse with a complicated intensity profile, there may still be significant spectral phase modulation even when the temporal phase is flat, and vice versa.  In this case, how do we define the transform limit?
\par 
\par One way is to ask how much the temporal phase variations have broadened the spectrum.  In other words, if we took the same temporal intensity profile, and set the phase equal to zero for all times, how much would the width of the spectrum change?  This gives us some idea of how significant the amount of temporal phase is.  The same arguments apply for the spectral phase and temporal width, of course.  The Laplacian TBPs, a set of lesser known TBPs, provide a quantitative measure of these effects.  The Laplacian TBPs measure the broadening of the rms width of the spectral (temporal) intensity due to the non-zero temporal (spectral) phase.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Temporal Laplacian\b0  - measures the broadening of the spectral width due to the temporal phase fluctuations.  For a flat temporal phase, the temporal Laplacian TBP is always 0.5 for all pulse shapes.  A temporal Laplacian of 1.0 thus means that the rms spectral width of the pulse is broadened by a factor of two by the presence of the non-zero temporal phase fluctuations.  Viewed another way, the rms spectral width could be reduced by a factor of 2 if the temporal phase variations could be eliminated.
\par 
\par \b Spectral Laplacian\b0  - measures the broadening of the temporal width due to the spectral phase fluctuations.  For a flat spectral phase, the spectral Laplacian TBP is always 0.5 for all spectral intensity shapes.  A spectral Laplacian of 1.0 means that the rms temporal intensity width is broadened by a factor of 2 due to the non-zero spectral phase.  In other words, the rms temporal intensity width could be reduced by a factor of 2 by eliminating the spectral phase variations.\fs24 
\par \pard\fs20 
\par \fs24 
\par \b\fs28 Minimum Time-Bandwidth Products for various pulse shapes\b0\fs24 
\par \fs20 
\par \fs24 
\par \trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\pard\intbl\fs20 Pulse Shape\cell FWHM TBP\cell RMS TBP\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Gaussian\cell 0.4413\cell 0.5\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Sech^2\cell 0.3148\cell 0.524\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Lorentzian\cell 0.2206\cell 2.465\fs24\cell\row
\pard\fs20 
\par 
\par }
5
Output_Files
Output Files
FFT;File Format;File Format,output files;Fourier transform;Frog Trace;Frog Trace,output file format;Marginals;Output Files;Spectrometer;Spectrum;Spectrum scaling



Imported



FALSE
84
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}{\f2\fmodern Courier New;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Output Files\cf0\fs24 
\par \fs20 
\par When the algorithm has finished (the user has clicked "Stop" on the \strike Algorithm Control\strike0\{linkID=6\} window ), several output files are written to disk.
\par \fs24 
\par \b\fs28 FROG Traces: a.dat, arecon.dat\b0\fs24 
\par \fs20 
\par The FROG traces are output to disk as a.dat (the target trace) and arecon.dat (the reconstructed or retrieved trace).  The\f1 re are two\f0  format\f1 s\f0  used\f1 :
\par 
\par \b\fs24 "Classic" Format\b0\fs20 
\par  \f0 ASCII Special format for Fortner Transform (http://www.fortner.com), \f1 what used to be an\f0  excellent program for displaying images.
\par Number of wavelengths    Number of delays
\par Minimum value        Maximum value
\par wavelengths. . .
\par delays. . .
\par data. . .
\par 
\par The number of wavelengths and number of delays are always equal, and are the same as the number of points selected on the \cf2\strike Initialize FROG\cf3\strike0\{linkTarget=GridSize\}\cf0  screen.
\par 
\par The minimum and maximum values refer to the pixel values, and are used by Transform for scaling purposes.
\par 
\par The wavelength coordinates of the trace are arranged from shortest to longest, and are immediately followed by the time coordinates.
\par 
\par The data then follows with the shortest wavelength (top row of the trace) output first, followed by the next wavelength, etc.
\par 
\par Here is a sample output file:\fs24 
\par \f2\fs20 128 128       // Number of points
\par 0 302.157     // Min and Max
\par 569.25        // Wavelengths - there are 128 of these
\par 570.943
\par 572.646\f0\fs24 
\par \f2\fs20 etc.\f0\fs24 
\par \f2\fs20 -320          // The delay values - there are 128 of these
\par -315
\par -310
\par -305
\par etc.
\par 1.17044e-13   // The data - there are 128X128 of these!!
\par 1.1383e-13
\par 1.08493e-13
\par 
\par \b\f1\fs24 "Femtosoft Compatible" Format\b0\fs20 
\par  - the \cf2\strike same format\cf3\strike0\{linkTarget=FileHeader\}\cf0  used to read in experimental traces.  This output will be "Constant Frequency" and "Delay Order".\f0\fs24 
\par \f2\fs20 
\par \f0\fs24 
\par \cf3\b\fs28\{target=EFieldFiles\}\cf0 Electric Field Files\b0\fs24 
\par \fs20 
\par Several fields are output from the program.  These files are:
\par \fs24 
\par \pard\fi-355\li715\fs20 e.dat - the original field in the time domain (assuming one is available)
\par ek.dat - the retrieved field (in the time domain) with the lowest FROG error
\par spec.dat - the original field in the frequency domain
\par speck.dat - the frequency domain representation of the retrieved field with the lowest FROG error.
\par \fs24 
\par \pard\fs20 The format for all these files is a 5-column format, with the following values:
\par Time (or wavelength)   Intensity   Phase (in radians)    Real Part of Field    Imaginary Part of Field
\par \fs24 
\par \pard\fi-355\li715\fs20 auto.dat, autok.dat - the second-order intensity autocorrelation of the original and retrieved fields\fs24 
\par \pard\fs20 
\par The autocorrelation file has a simple two-column format : time and intensity.
\par 
\par \fs24 
\par \b\fs28 Spectrum Scaling\b0\fs24 
\par \fs20 
\par The FROG program uses FFT's to generate the spectrum of the pulse.  FFT's produce a spectrum that is scaled to constant frequency units (the spectral energy is binned in bins of constant frequency width, if you like).  However, laboratory instruments such as a grating spectrometer produce spectra that are binned on a constant wavelength interval.  The FROG program takes this into account, and reads in data assuming a constant wavelength spacing, converts it to constant frequency spacing for internal use, and then reconverts it back to constant wavelength spacing for output as spec.dat and speck.dat.  Therefore the user can transparently use ordinary laboratory units and allow the FROG program to automatically take care of the conversion.
\par 
\par \fs24 
\par \cf3\b\fs28\{target=FrogDatFile\}\cf0 The Frog.dat file\b0\fs24 
\par \fs20 
\par A file called frog.dat is written for each retrieval.  This file contains a log of all the activity of the program.  It contains a record of all the input parameters that the user entered, as well as a list of the FROG error for each iteration, the algorithmic strategy being used, and finally the \strike Results\strike0\{linkID=4\} of the retrieval - pulse widths, time-bandwidth products, etc.
\par 
\par \fs24 
\par \b\fs28 The Marginals - marg.dat\b0\fs24 
\par \fs20 
\par A file called marg.dat is also written.  This contains the delay and frequency marginals for the target and retrieved FROG traces.  The six-column format is 
\par 
\par time      original delay marginal     retrieved delay marginal     original frequency marginal    retrieved frequency marginal     wavelength
\par 
\par The frequency marginals are also corrected to represent constant wavelength bins (as mentioned above), as well.
\par 
\par If the\f1  \cf2\strike DataSource\cf3\strike0\{linkTarget=DataSource\}\cf0\f0  is an experimental FROG trace, and the frequency \strike marginal\strike0\{linkID=20\} was calculated, the calculated marginal will be saved in a file called ExpMarg.dat.  This file has two columns - the wavelength and the value of the calculated marginal.
\par 
\par }
6
Algorithm_Control
Algorithm Control
Algorithm Control;Current Error;FROG Error;Stop the algorithm



Imported



FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Algorithm Control\cf0\fs24 
\par 
\par \fs20 The algorithm control window has three buttons and two text display boxes.  The left button initially has the caption "Begin."  When you press this, the algorithm will begin operation.  The caption on this button changes to "Pause," and pressing it now will allow you to pause the algorithm in order to examine intermediate results.  In Pause mode, the button caption changes to "Resume," and can be used to resume normal operation of the algorithm.
\par 
\par \{bmc bm0.BMP\}
\par 
\par While the algorithm is running, the right button says "Stop."  If pressed the algorithm will cease retrieving the pulse from the FROG trace.  The \strike Results\strike0\{linkID=4\} screen will be updated, and the \strike output files\strike0\{linkID=5\} will be saved.  If the algorithm is stopped, the right button says "Quit."  Pressing it will close all the windows associated with the FROG algorithm.\fs24 
\par \fs20 
\par The FROG program incorporates several different \strike strategies\strike0\{linkID=24\} to retrieve the pulse.  The name of the current strategy is displayed in the Current Strategy box.  These strategies are described in the \strike published literature\strike0\{linkID=15\}.
\par 
\par The Force Change button will force the FROG algorithm to change the current strategy.  This is useful when a strategy is converging very slowly.  The algorithm will continue with a strategy as long as it is making a certain amount of progress, but often speed can be gained by switching from a slowly-converging strategy to one that converges more quickly.
\par 
\par The FROG error box displays the current iteration number, as well as the current \strike FROG error\strike0\{linkID=44\}.  After "Stop" is pressed, it also shows the lowest overall FROG error achieved during this run of the program.
\par 
\par 
\par }
7
Double_Pulse
Double Pulse
Double Pulse;Relative height;Relative phase;Separation



Imported



FALSE
17
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Double Pulse\cf0\fs24 
\par \fs20 
\par The \strike field generation facility\strike0\{linkID=18\} allows for the addition of a double pulse.  The double pulse is coherently added to the primary pulse after all of the phase distortions have been applied to each pulse independently.  The available parameters include all of the parameters available to the main pulse, plus three that are available only for the double pulse:
\par 
\par \{bmc bm1.BMP\}
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Relative Phase\b0  - sets the relative phase of the second pulse with respect to the first.
\par 
\par \b Relative Height\b0  - sets the peak intensity of the second pulse, with the peak of the first pulse (before phase distortions) being unity.
\par 
\par \b Separation\b0  - the separation of the peaks of the primary pulse and the double pulse.\fs24 
\par \pard\fs20 
\par The shape of the double pulse is the same as that of the original pulse.  The units on the \b Double Pulse\b0  screen will adjust according to the primary domain and whether real or pixel units are being used.\fs24 
\par 
\par }
8
Optical_Nonlinearity
Optical Nonlinearity
Frog Trace;Frog Trace,mathematical defn.;Optical Nonlinearity;PG;SD;SHG;THG



Imported



FALSE
40
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Optical Nonlinearity\cf0\fs24 
\par \fs20 
\par A FROG trace is created by interacting a laser pulse with itself in an nonlinear optical medium.  This interaction produces a "signal field," the nature of which depends on the details of the nonlinear optical interaction.  This signal field is then frequency-resolved in a spectrometer, and its intensity is recorded.
\par 
\par The FROG algorithm needs to know what type of optical nonlinearity was used to generate the FROG trace, as the same laser pulse electric field will in general produce quite different FROG traces.  The mathematics used by the algorithm to retrieve the pulse with vary with the type of optical nonlinearity.  \fs24 
\par 
\par \b\fs28 Nonlinear Optical Interactions\b0\fs24 
\par \fs20 
\par There are four possible types of nonlinear interactions, three third order and one second order. \fs24 
\par \pard\sb115\b\fs20 Third order interactions\b0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 PG\ulnone  (Polarization Gate) - commonly generated by Kerr-effect-induced polarization rotation in an isotropic medium.  Can also be generated by so-called "transient-gate" FROG (using a BOXCARS-type phase-matching geometry) or by a cascaded second-order interaction.
\par \fs24 
\par \pard\fi-355\li715\qc\cf2\f1\fs20\{bmc bm28.gif\}\cf0 
\par \pard\fi-355\li715\f0 
\par \ul SD\ulnone  (Self-Diffraction) - generated by a three-wave mixing geometry (two input beams write a grating in the material, and one of the beams scatters off this grating to produce the [third] output beam).  Can also be generated in a transient-grating geometry or cascaded second-order interactions.
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm29.gif\}\cf0\f0\fs24 
\par \pard\fi-355\li715\fs20 
\par \ul THG\ulnone  (Third-Harmonic Generation) - uses a two-input-beam geometry where the signal beam is the third harmonic of the input beam.  Can also be generated by cascaded second-order interactions.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm30.gif\}\cf0\f0\fs24 
\par \pard 
\par \pard\sb115\b\fs20 Second order interactions\b0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 SHG\ulnone  (Second-Harmonic Generation) - uses a standard autocorrelation geometry in a frequency-doubling crystal.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm31.gif\}\cf0\f0\fs24 
\par \pard 
\par \b\fs28 Generating the FROG trace\b0\fs24 
\par \fs20 
\par The FROG trace itself is then generated by Fourier transforming the signal field and taking its intensity:
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm32.gif\}\cf0 .\f0\fs24 
\par \pard\fs20 
\par This mathematically represents the frequency-resolution performed by the spectrometer, and the recording of the resulting intensity (by a detector).
\par 
\par }
9
Raw_Data_Window
Raw Data Window
Data extract;Extract;FFT;Fourier transform;Grid data;Noise subtraction;Raw Data;Resample Delay Axis;Sampling rate;Spectrometer



Imported



FALSE
55
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Raw Data Window\cf0\fs24 
\par 
\par \fs20 The \b Raw Data\b0  screen appears when the user elects to use experimental data as an input.  With this screen, the user can change the experimental data through various noise subtractions and other data manipulations.
\par 
\par \{bmc bm34.BMP\}
\par 
\par The \b Raw Data\b0  screen contains a menu bar, which controls the data manipulations.  At the bottom of the screen it lists the magnification factors that were applied to the raw data set in order to display it.  In other words, if a 100 X 100 pixel experimental data set were being displayed on a 100 X 300 pixel window, the magnification factors would be 1 and 3.
\par 
\par \fs24 
\par \b\fs28 Noise Subtraction\b0\fs24 
\par \fs20 
\par There are several types of noise reduction routines built into the FROG program.  Large scale, low level noise will result in noisy wings in the retrieved pulse, so it is important to reduce noise as much as possible.  Of course, it is always better to reduce the noise in the experimental apparatus, rather than try to subtract it after the fact.
\par 
\par The noise subtraction routines can be applied as many times as you like.  The results will be displayed on the screen.  However, there is no way to undo a noise subtraction except by canceling and reading in the data from disk again.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Full Spectrum\b0  - this method takes the average of the spectra at the two smallest and two largest delays, and uses this average spectrum to subtract from the data at every time delay.  The rationale behind this is that when stray light is entering the spectrometer used to make the FROG measurement, its spectrum will be dispersed across the detector independent of time delay.  The smallest and largest time delays should not have any legitimate FROG data, so that the only signal present there is the stray light.  Subtracting this spectrum from all delay values should increase the accuracy of the data.
\par 
\par \b Lowest Pixel\b0  - in those cases where the FROG data is nearly truncated, a Full Spectrum subtraction may yield anomalous results.  In these cases, the Lowest Pixel subtraction will look for the pixel with the lowest value (least amount of signal) and subtract that value from every pixel.  This may be useful for removing dark current counts, for example.
\par 
\par \b Edge\b0  - this mode takes an average value of every data value within two pixels of the edge of the data set on all four sides.  Again, the real FROG signal should be zero here, so that only noise contributes to the average.  This average value is then subtracted from every pixel in the data set.
\par 
\par \b Fourier Low Pass\b0  - in this case a low-pass Fourier filter is used.  First, the data are put onto a square M X M grid with a number of elements M that is a power of two (the smallest value of M that will hold all the data is used).  The data are then Fourier transformed, and are multiplied by a circular Gaussian filter.  The half width at half maximum (HWHM) of the filter is input by the user; a value of 1.0 means a HWHM of M/2.
\par 
\par \b Cleanup Pixels\b0  - this remarkable filter will hunt down and remove stray pixels.  This will help remove noise in places that are hard to process with the other filters.
\par 
\par RECOMMENDATION - probably the best default filtering path is one or two \b Full Spectrum\b0  subtractions, followed by a \b Cleanup Pixels\b0 .\fs24 
\par \pard\fs20 
\par \fs24 
\par \b\fs28 Data 
\par \b0\fs24 
\par \pard\fi-355\li715\b\fs20 Extract Data\b0  - Sometimes only a certain section of the experimental data should be used, due to excessive noise in other regions of the data.  Using the Data Extract feature, the user can select which section of the data for the FROG program to use.
\par 
\par Using the mouse, draw a rectangle around the area of data that you would like to use.  Then, click on the Data menu, and select Extract.  The data that was outside the rectangle will be discarded and the new data set will be displayed.
\par 
\par There is no way to undo an Extraction.
\par 
\par 
\par \pard\cf2\b\fs24\{target=ResampleDelayAxis\}\cf0 Resample Delay Axis - \b0\fs20 At times it is advantageous to resample the delay axis.  Suppose, for example, an overzealous grad student made a FROG trace of a 100 fs FWHM pulse using a 0.5 fs delay step size.  In order to capture all the data, over 400 delay steps would be necessary.  That means that the smallest grid size that could be used in the FROG program is 512 X 512.  At this size, the FROG algorithm would be extremely slow and require excessive amounts of memory.  This large of a grid size is almost never needed, unless the pulse is extremely complicated.  Remember, a transform-limited Gaussian pulse can be fully captured by a 16 X 16 pixel FROG trace!  (Try it - use a temporal pulse width of 2.66 in SHG FROG or 3.2 in PG FROG).
\par \pard\fi-355\li715 
\par The answer here is to resample the delay axis.  The optimal \strike FROG sampling rate\strike0\{linkID=26\} for sampling a 100 fs pulse on a 64 X 64 grid is about 15 to 20 fs.  Thus the sampling rate could be reduced to every 15 fs.  \fs24 
\par \fs20 
\par To resample the delay axis, select Data, then Resample Delay Axis.  Enter the new sampling rate (this must be larger than the current rate - even the FROG algorithm can't create data that isn't there).  The FROG program will display the new data set.
\par \fs24 
\par \pard 
\par \b\fs28 Grid Data\b0\fs24 
\par \fs20 
\par The delay and frequency axes in the FROG program are related though a Fourier transform relationship.  However, experimental data from the laboratory has no such relationship in general, and thus will not satisfy the necessary constraints.  The FROG program must thus "grid" the data; that is, put it on a data grid that is compatible with the Fourier transform relationship.
\par 
\par In general, it is easier to oversample the data in the spectral domain than in the time domain, because a spectrometer usually has much more resolution than the FROG program requires.  For example, on a 64 X 64 pixel grid, a 100 fs pulse is adequately sampled with 15 fs steps.  At 800 nm, this means a wavelength step of 2.2 nm is required.  Practically all spectrometers provide much more resolution than this.  Therefore, the FROG program averages over the wavelength data, putting it on a coarser scale in order to satisfy the Fourier transform relationship.  If the wavelength spacing is already too coarse, then a warning message appears.  In this case, the total delay range must be reduced (fewer points and/or smaller time step) in order to reduce the needed spectral resolution.  If this is impossible (eg, resampling the delay axis causes the FROG trace to be truncated) then a spectrometer with finer resolution is needed..
\par 
\par Grid the data by selecting "Grid Data."  The FROG program automatically puts the data on a proper grid and displays the \strike Algorithm Control\strike0\{linkID=6\} screen.  The algorithm is now ready to run.\fs24 
\par 
\par }
14
FROG_Program_Introduction
FROG Program Introduction
Convergence;FROG Program Introduction;Tutorial



Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Program Introduction\cf0\fs24 
\par 
\par \fs20 If this is your first time running FROG, you can get a good idea of the program by running a simple example.
\par 
\par Click on the small button labeled "F" near the top left of the screen.  This will display the \strike FROG Algorithm Calibrations window\strike0\{linkID=1\}.  Click "OK".  Now we are ready to run the algorithm.  But first, let's review the windows on this screen.
\par 
\par On the top left, we see the PG FROG trace of our initial transform-limited Gaussian pulse.  Below it is the (quite irregular) FROG trace of the algorithm's initial guess for the retrieved field.  This initial field is by default a pulse with Gaussian intensity and random phase.  Next to these two traces are the original and retrieved fields in both the time domain (top) and frequency domain (bottom).  For the color coding of the various traces, see the \strike FROG Trace Windows\strike0\{linkID=28\} or \strike Electric Field and Spectrum Windows\strike0\{linkID=29\} items.  On the bottom left is the \strike Results window\strike0\{linkID=4\}, while on the bottom right is a graph that will show the FROG error as a function of iteration.  Above it is the \strike Algorithm Control\strike0\{linkID=6\} window, which allows you to control the progress of the algorithm.
\par 
\par Click "Begin" on the \strike Algorithm Control\strike0\{linkID=6\} window.  The algorithm begins to run.  On each iteration, it constructs a new guess for the retrieved field, and generates an error for that field, based on the rms difference between the original (target) FROG trace and the FROG trace of the current retrieved field.  The field graphs are updated on each iteration, and the retrieved FROG trace graph is updated every 5 iterations when the number of iterations is greater than 10.
\par 
\par Allow the algorithm to run until you are satisfied with the agreement between the original and retrieved FROG trace.  In general, an error of 0.0001 or less usually gives excellent agreement (no visible distinction between the original and retrieved FROG traces).  When using (inevitably noisy) experimental data, the error will generally not progress this low, and visual agreement of the two traces (coupled with the inability of the algorithm to achieve any lower FROG errors) usually signals that it is time to stop the algorithm.  The algorithm saves the field that achieved the lowest overall error, so don't worry if the error goes up sometimes.  The algorithm may try different starting points to see if it can achieve lower error, so don't be surprised if the error jumps up somewhat during various algorithms.  Experience has proved that all of these strategies are useful at some time, but rarely are they all effective on a single data set.
\par 
\par The program will switch between several strategies printing the names in a box on the \strike Algorithm Control\strike0\{linkID=6\} window and putting a red line on the FROG error graph.  A description of these \strike strategies\strike0\{linkID=24\} is available in the \strike literature\strike0\{linkID=15\}.
\par 
\par When you are satisfied with the convergence of the algorithm, click "Stop" on the \strike Algorithm Control\strike0\{linkID=6\} window.  The program will now display the retrieved field (and trace) that had the lowest overall error in all the previous iterations.\fs24 
\par \fs20 
\par Now you can either click "Quit" on the Algorithm Control window, or click the "F" again to start anew.
\par 
\par 
\par }
15
Publications
Publications
Publications



Imported



FALSE
34
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Publications\cf0\fs24 
\par \fs20 This help file is not meant to be a complete tutorial on using FROG.  Please consult the literature if you are not familiar with the technique.  \fs24 
\par 
\par \pard\sb115\b\fs20 FROG Publications\b0\fs24 
\par \pard\fs20 
\par Kenneth W. DeLong and Rick Trebino, "Improved ultrashort pulse-retrieval algorithm for Frequency-Resolved Optical Gating," \i Journ. Optical Society of America A\i0 , vol. \b 11\b0 , 2429-2437 (1994).
\par 
\par Kenneth W. DeLong, David N. Fittinghoff, Rick Trebino, Bern Kohler, and Kent Wilson, "Pulse retrieval in Frequency-Resolved Optical Gating based on the method of generalized projections," \i Opt. Lett\i0 ., vol. \b 19\b0 , 2152-2154 (1994).
\par 
\par K. W. DeLong, Rick Trebino, and Daniel J. Kane, "Comparison of ultrashort-pulse Frequency-Resolved Optical Gating traces for three common beam geometries," \i Journ. Opt. Soc. Am. B\i0 , vol. \b 11\b0 , 1595-1608 (1994).
\par 
\par K. W. DeLong, Rick Trebino, J. Hunter, and W. E. White, "Frequency-resolved optical gating with the use of second-harmonic generation," \i Journ. Opt. Soc. Am. B\i0 , vol.\b  11\b0 , 2207-2215 (1994).\fs24 
\par \fs20 
\par Kenneth W. DeLong, David N. Fittinghoff, and Rick Trebino, "Practical Issues in Ultrashort-Laser-Pulse Measurement Using Frequency-Resolved Optical Gating," \i IEEE Journ. Quant. Electr\i0 ., vol. \b 32\b0 , 1253-1264 (1996).
\par \fs24 
\par \pard\sb115\b\fs20 TADPOLE Paper\b0\fs24 
\par \pard\fs20 
\par David N. Fittinghoff, Jason L. Bowie, John N. Sweetser, Richard T. Jennings, Marco A. Krumbugel, Kenneth W. DeLong, Rick Trebino, and Ian Walmsley, "Measurement of the intensity and phase of ultraweak, ultrashort laser pulses," \i Opt. Lett.\i0 , vol. \b 21\b0 , 884-886 (1996).
\par \fs24 
\par \pard\sb115\b\fs20 Review Paper\b0\fs24 
\par \pard\fs20 
\par Rick Trebino, Kenneth W. DeLong, David N. Fittinghoff, John N. Sweetser, Marco A. Krumbugel, Bruce A. Richman, and Daniel J. Kane, "Measuring ultrashort laser pulse in the time-frequency domain using frequency-resolved optical gating," \i Rev. Sci. Instrum\i0 ., vol. \b 68\b0 , 3277-3295 (1997).
\par \fs24 
\par \pard\sb115\b\fs20 XFROG\b0\fs24 
\par \pard\fs20 
\par S. Linden, H. Geissen, and J. Kuhl, "XFROG - A New Method for Amplitude and Phase Characterization of Weak Ultrashort Pulses," \i Phys. Stat. Sol. (b)\i0 , \b 206\b0 , 119-124 (1998).
\par \fs24 
\par \pard\sb115\b\fs20 Web Site\b0\fs24 
\par \pard\fs20 
\par http://www.ca.sandia.gov/~ultrafrog
\par 
\par }
16
Maximum_Time_Bandwidth_Products
Maximum Time Bandwidth Products
Maximum Time Bandwidth Products;Time-bandwidth Products



Imported



FALSE
18
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Maximum Time Bandwidth Products\cf0\fs24 
\par \fs20 
\par The larger the\f1  \cf2\strike Grid Size\cf3\strike0\{linkTarget=GridSize\}\cf0\f0  of a FROG trace, the more complex pulses it can contain.  A 16 X 16 FROG trace can contain a Gaussian, transform-limited pulse (try it - use a temporal pulse width of 2.66 in SHG FROG or 3.2 in PG FROG).  Pulses with more interesting structures must use a FROG trace with a larger\f1  \cf2\strike Grid Size\cf3\strike0\{linkTarget=GridSize\}\cf0\f0 .
\par 
\par The maximum time-bandwidth products that a FROG trace of a given size can handle was explored in DeLong et al., IEEE JQE \b 32\b0 , 1253 (1996).  Here we reproduce the results from that paper (time-bandwidth products are rms, pulse shape is Gaussian):
\par 
\par \fs24 
\par \trowd\trgaph105\trleft-116\cellx2175\cellx4575\cellx6975\cellx9375\cellx11775\pard\intbl\fs20 Pulse type\cell PG\cell SD\cell THG\cell SHG\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2175\cellx4575\cellx6975\cellx9375\cellx11775\intbl Linear Chirp\cell 8.8\cell 4.9\cell 4.8\cell 5.1\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2175\cellx4575\cellx6975\cellx9375\cellx11775\intbl SPM\cell 20\cell 7.5\cell 6.6\cell 8.8\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2175\cellx4575\cellx6975\cellx9375\cellx11775\intbl SCP\cell 3.4\cell 3.0\cell 2.6\cell 3.3\fs24\cell\row
\pard 
\par \fs20 
\par One special note for experimentally generated data - if the experimental trace is too long in the time (horizontal) direction, it may be appropriate to\f1  \cf2\strike resample the time delay\cf3\strike0\{linkTarget=ResampleDelayAxis\}\cf0\f0  rather than simply use a larger number of points.\fs24 
\par 
\par }
17
Initial_Field_Generation
Initial Field Generation
Calculation sequence;Generating Pulses;Initial Field Generation;Pixel Units;Primary Domain;Real Units;Typical Values;Units



Imported



FALSE
90
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Initial Field Generation\cf0\fs24 
\par \fs20 
\par The FROG program contains quite an extensive facility for generating pulses from user input values.  The Initial Field tab provides this ability.  This screen is a little complicated at first glance, but it is not difficult to use.  If a user wishes to make a pulse of even greater complexity than can be achieved using this facility, the best method is to create the field with a custom program, write it to disk, and use the \strike Read-In Field\strike0\{linkID=2\} capability.
\par 
\par \{bmc bm17.BMP\}
\par \fs24 
\par \b\fs28 Domains and Units\b0\fs24 
\par \fs20 
\par At the top of this screen there are two sets of radio buttons that control how the input data is interpreted.
\par 
\par The \b Primary Domain\b0  box has two selections: time and frequency.  The primary domain of the pulse is where the pulse width and linear chirp are set.  Also, a \strike double pulse\strike0\{linkID=7\} can be added only in the primary domain of the pulse.  Phase distortions can still be added in the other domain; however, the primary domain phase distortions are added first, then the pulse is Fourier transformed and the phase distortions of the other domain are added.
\par 
\par The \b Units\b0  radio box switches the program between using unnormalized pixel units and real units (fs and nm).  In the pixel unit mode, all units in both domains are measured in pixels.  In real mode, the labels of the appropriate input boxes change to fs- and nm-based units.  In the real mode, the pixel spacing must also be decided.  This value can only be set in the primary domain (this value sets itself automatically to an appropriate value based on the pulse width specified, unless the user overrides this by entering another value).  Also, the center wavelength must be specified.  Frequencies are always calculated in angular (not linear) units.
\par 
\par \fs24 
\par \b\fs28 Pulse Input Parameters\b0\fs24 
\par \fs20 
\par Shape - three shapes are available, Gaussian, Super Gaussian (4th power), and Sech^2.
\par 
\par Width - specifies the FWHM of the pulse intensity in the primary domain (before phase distortions are added).
\par 
\par Chirp - sets the linear chirp (quadratic phase).
\par 
\par SPM - self-phase modulation, adds a phase that is proportional to the intensity.  The value entered here is the phase added at the peak intensity.
\par 
\par Cubic Phase - adds a cubic phase.
\par 
\par Quartic Phase - adds a quartic phase.
\par 
\par \strike Double Pulse\strike0\{linkID=7\} - adds a double pulse in the primary domain.
\par 
\par \fs24 
\par \b\fs28 Pulse Calculation Sequence\b0\fs24 
\par \fs20 
\par \b Time Domain
\par \b0\fs24 
\par \fs20 All time units are in fs.
\par 
\par First, the time domain parameters are used:
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm18.gif\}\cf0\f0\fs24 
\par \pard\fs20 
\par where A(t) is the pulse shape.  For Gaussian pulses,
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm19.gif\}\cf0 ,\f0\fs24 
\par \pard\fs20 
\par for Sech^2 pulses
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm20.gif\}\cf0 ,\f0\fs24 
\par \pard\fs20 
\par and for Super Gaussian pulses is
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm21.gif\}\cf0 .\f0\fs24 
\par \pard\fs20 
\par Then the field is Fourier transformed and the frequency-domain phase distortions are added.
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm22.gif\}\cf0\f0\fs24 
\par \pard\fs20 
\par The field is then Fourier transformed back into the time domain.
\par 
\par \b Frequency domain\b0\fs24 
\par \fs20 
\par All frequencies are in inverse fs, and are angular (not linear) frequencies.
\par 
\par First, the frequency domain phase distortions are introduced:
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm23.gif\}\cf0\f0\fs24 
\par \pard\fs20 
\par where the definition of A(f) for the different pulse shapes is similar to A(t).  The field is then transformed to the time domain and the temporal phase distortions are applied:
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm24.gif\}\cf0 .\f0\fs24 
\par \pard\fs20 
\par \fs24 
\par \b\fs28 Typical Values\b0\fs24 
\par \fs20 
\par In order to become more familiar with the various pulse phase distortions, we offer here some typical values to begin your exploration with.  The table is in Pixel Units.
\par 
\par \fs24 
\par \trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\pard\intbl\b\fs20 Phase distortion\b0\fs24\cell\b\fs20 Primary Domain\b0\fs24\cell\b\fs20 Width\b0\fs24\cell\row
\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\pard\intbl\fs20 Linear Chirp: -0.04\cell Time\cell 10\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl SPM: 3\cell Time\cell 10\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Temporal Cubic Phase: 0.004\cell Time\cell 10\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Spectral Cubic Phase: 0.003\cell Frequency\cell 10\fs24\cell\row
\fs20\trowd\trgaph105\trleft-116\cellx2655\cellx5535\cellx8415\intbl Spectral Quartic Phase: 0.0002\cell Frequency\cell 10\fs24\cell\row
\pard\fs20 
\par 
\par 
\par }
18
Generate_From_Theory
Generate From Theory
Data source;Data source,generate from theory;Generate From Theory



Imported



FALSE
20
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Generate From Theory\cf0\fs24 
\par \fs20 
\par When "Generate From Theory" is selected as the data source, parameters describing an electric field can be input into the program.  The FROG program will then generate an electric field from these parameters.
\par 
\par \{bmc bm15.SHG\}
\par 
\par There are four tabs that are available to control the operation of the FROG algorithm when Generate From Theory is selected:
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Initial Field\strike0\{linkID=17\} - used to input the parameters that govern the generation of the initial electric field.\fs24 
\par \pard 
\par \pard\fi-355\li715\strike\fs20 Outputs\strike0\{linkID=22\} - selects the directory for the output files of the program.
\par 
\par \strike First Guess\strike0\{linkID=23\} - selects the field to be used as the starting field for the retrieval.
\par 
\par \strike Strategies\strike0\{linkID=24\} - controls the strategies used by the FROG retrieval algorithm.\fs24 
\par \pard\fs20 
\par 
\par }
19
Experimental_FROG_Trace
Experimental FROG Trace
Data source;Data source,experimental FROG Trace;Experimental FROG Trace



Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Experimental FROG Trace\cf0\fs24 
\par \fs20 
\par The "Experimental FROG Trace" Data Source option allows the use of experimentally generated FROG traces as the target trace.  
\par 
\par \{bmc bm4.SHG\}
\par 
\par Selecting Experimental FROG Trace will present the user with five tabs that can be used to control the execution of the FROG algorithm.
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Exp. Data\strike0\{linkID=21\} - sets the options for reading in the experimental FROG trace, its calibrations, etc.
\par 
\par \strike Marginals\strike0\{linkID=20\} - sets the input files necessary for calculating the frequency marginal, for comparison against the frequency marginal of the experimental trace.
\par 
\par \strike Outputs\strike0\{linkID=22\} - selects the directory for the \strike output files\strike0\{linkID=5\} of the program.
\par 
\par \strike First Guess\strike0\{linkID=23\} - selects the field to be used as the starting field for the retrieval.
\par 
\par \strike Strategies\strike0\{linkID=24\} - controls the strategies used by the FROG retrieval algorithm.\fs24 
\par \pard\fs20 
\par After the OK button is pressed, the experimental data is read into the program and the \strike Raw Data\strike0\{linkID=9\} screen appears.
\par 
\par }
20
Marginals
Marginals
File Format;File Format,marginal input files;Frequency Marginal;Marginals



Imported



FALSE
45
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Marginals\cf0\fs24 
\par \fs20 
\par The marginals of the FROG trace provide a powerful way to check the consistency of experimental data.  A marginal of a FROG trace is calculated by summing the FROG trace along one of its axes.  For example, summing the FROG trace over tau for all frequencies leads to a one-dimensional function of frequency called the frequency marginal.  The frequency marginal proves to be the most useful of the two marginals.
\par 
\par For a given optical nonlinearity, the frequency marginal obeys a certain mathematical relationship to the pulse's spectrum, autocorrelation, and/or second-harmonic spectrum.  By measuring these quantities independently, computing the expected frequency marginal, and then comparing to the marginal of the actual FROG trace, systematic errors in the experimental apparatus can be easily discovered.  If the two marginals do not match to a reasonable degree, a systematic error is indicated in either the FROG apparatus or the equipment (spectrometer, autocorrelator, etc) used to measure the independent quantities.
\par 
\par This ability to compare the marginals is very important and unique to FROG.  For example, with only a spectrometer, there is no independent measurement to be made to verify the that the measured spectra are correct.  The same can be said for autocorrelators (indeed, we know firsthand of experimentalists who worked for months with an incorrectly calibrated autocorrelator - all along insisting that it was correct).
\par 
\par The exact mathematical form of the marginals is discussed in K. W. DeLong, Rick Trebino, and Daniel J. Kane, "Comparison of ultrashort-pulse Frequency-Resolved Optical Gating traces for three common beam geometries," \i Journ. Opt. Soc. Am. B\i0 , vol. \b 11\b0 , 1595-1608 (1994).
\par \fs24 
\par \fs20 The Marginals tab specifies the files that have the independently measured data needed to calculate the expected frequency marginal.
\par 
\par \{bmc bm27.BMP\}
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Spectrum\b0 : the usual spectrum of the laser pulse.
\par 
\par \b Autocorrelation\b0 : the standard second-order intensity autocorrelation of the laser pulse.
\par 
\par \b SHG Spectrum\b0 : the spectrum of the laser pulse after being doubled by a frequency-doubling crystal.  This is \i not\i0  the same as fundamental spectrum with the wavelengths divided by two!\fs24 
\par \pard\fs20 
\par Not all of the files are needed for each \strike nonlinearity\strike0\{linkID=8\}.  The necessary files are:\fs24 
\par \pard\fi-355\li715\b\fs20 PG\b0 : spectrum, autocorrelation
\par \b SD and THG\b0 : SHG spectrum, autocorrelation
\par \b SHG\b0 : spectrum.\fs24 
\par \pard\fs20 
\par If the necessary files are not specified, the marginal calculation will not occur.  If they are specified, it will occur automatically.
\par \fs24 
\par \pard\sb115\b\fs20 File Formats\b0\fs24 
\par \pard\tx355\fs20 
\par Each file should consist of ordered pairs separated by whitespace.  For example, the spectrum should be pairs of (wavelength, intensity), like
\par 750\tab  0.01
\par 751.3\tab 0.03
\par 752.6\tab 0.11
\par . . .
\par The central wavelength and wavelength spacing will be derived from the wavelength numbers.
\par 
\par Similarly, the autocorrelation has the time delay in the first column, and autocorrelation intensity in the second.  The SHG spectrum format is identical to the spectrum.
\par \fs24 
\par \b\fs28 Comparing the Marginals\b0\fs24 
\par \fs20 
\par The marginal comparison graph will appear after the \strike raw data\strike0\{linkID=9\} has been gridded.  The calculated marginal will be saved in the ExpMarg \strike output file\strike0\{linkID=5\}.\fs24 
\par 
\par }
21
Experimental_Data_Tab
Experimental Data Tab
Constant Frequeny Bins;Constant Wavelength Bins;Experimental Data Tab;File Format;File Format,experimental FROG traces;Header;Header,experimental data;Increment Sizes;Order



Imported



FALSE
84
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Experimental Data Tab\cf0\fs24 
\par \fs20 
\par The Experimental Data tab allows the user to specify the data file that contains the FROG trace data to be used, and the calibrations used to read the data into the program.  Once all of the parameters have been entered and OK is selected, the data will be read into the program and the \strike Raw Data\strike0\{linkID=9\} window will appear.
\par 
\par \{bmc bm3.BMP\}\fs24 
\par 
\par \b\fs28 Parameters\b0\fs24 
\par \fs20 
\par These parameters are necessary for the program to properly use an experimentally generated FROG trace.  These parameters can either be entered by hand, or they can be put in the\f1  data file's header\f0 .  See below for\f1  \cf2\strike file format requirements\cf3\strike0\{linkTarget=FileHeader\}\cf0 .\f0 
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Number of Delay Points\b0  - the number of data pixels along the time delay axis in the raw data.  For example, if the experiment generated data at 30 distinct delays, then the number of delay points in the raw data is 30.
\par \b Number of Wavelength Points\b0  - the number of data pixels along the wavelength axis in the raw data.
\par \fs24 
\par \pard\ul\b\fs20 NOTE:\ulnone\b0  do not confuse the \cf2\strike grid size\cf3\strike0\{linkTarget=GridSize\}\cf0  with the number of points in the experimental data set.  Whereas the former must be a power of 2, the latter can be any number, depending on the details of the experiment.  The \strike Raw Data\strike0\{linkID=9\} window will take care of formatting the data for the algorithm on the chosen grid size.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Delay Increment\b0  - the spacing, in femtoseconds, between adjacent pixels of the data along the delay axis.
\par \b Wavelength Increment\b0  - enter the spacing, in nanometers, between adjacent pixels of the data along the wavelength axis.\fs24 
\par \pard\fs20 
\par Only one of the following two values need be entered.  The FROG program will calculate the other after the value is entered.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Wavelength of Center Pixel\b0  - the wavelength of the pixel at the center of the wavelength axis.  For example, if there are 400 data points along the wavelength axis, enter the wavelength of pixel 200 (using zero-based counting of the pixels - i.e., the first pixel is pixel 0).  Be sure to use the actual wavelength of the signal field.  For example, for an SHG FROG trace of a laser pulse centered at 800 nm, the wavelength of the center pixel should be somewhere near 400 nm, not 800 nm.
\par \b Wavelength of First Pixel\b0  - the wavelength corresponding to pixel number zero (the first data point in the file).  If you enter this number directly, the FROG program will automatically calculate the center wavelength for you.\fs24 
\par \pard\fs20 
\par \fs24 
\par \b\fs28 Order Radio Box\b0\fs24 
\par \fs20 
\par Normally, the data is read in with the wavelength changing the fastest, i.e., the data points are in the order (Delay 0, Wavelength 0), (Delay 0, Wavelength 1), etc.  This is known as Wavelength order  However, if the data are stored such that the delay axis is changing the fastest, click Delay in the Order box.  More on\f1  \cf2\strike data format\cf3\strike0\{linkTarget=FileHeader\}\cf0\f0  below.
\par \fs24 
\par \b\fs28 Read In As Radio Box\b0\fs24 
\par \fs20 
\par Normally, the FROG program assumes that the input data is binned in constant wavelength bins (as a grating spectrometer would do).  However, this may not always be the case.  If the input FROG data is on a constant frequency spacing (either because it's been gridded by another program, or perhaps it is the output of a previous run of the FROG program), click "Constant Frequency."
\par \fs24 
\par \b\fs28 The Use Header Information Check Box\b0\fs24 
\par \fs20 
\par Click on the Use Header Information check box to read in the data calibrations listed in the file's header.  The data values read in will be displayed in the appropriate boxes.  If, after clicking, you realize that the file did not have a header, simply unclick the Use Header Information check box.  The values will be cleared and the data input will proceed from the beginning of the file.
\par 
\par \fs24 
\par \cf3\b\fs28\{target=FileHeader\}\cf0 Headers and Data File Format\b0\fs24 
\par \fs20 
\par Entering the experimental calibrations by hand can become tedious.  Thus, FROG allows you to store these values in the header of the data file, so that they can be read in automatically and reliably.  To use a header with your data, make the first five values in the data file correspond to:
\par 
\par Number of delay points
\par Number of wavelength points
\par Delay Increment
\par Wavelength increment
\par Wavelength of center pixel
\par Data. . . 
\par 
\par These values were defined above.  When Wavelength is selected in the Order box, the structure of the data block is such that the wavelength varies the fastest.  In other words, the data has the structure
\par 
\par (Delay 0, Wavelength 0)
\par (Delay 0, Wavelength 1)
\par (Delay 0, Wavelength 2)
\par . . .
\par (Delay 0, Wavelength NWav - 1)
\par (Delay 1, Wavelength 0)
\par (Delay 1, Wavelength 1)
\par etc.
\par 
\par If Delay is checked in the Order box, the data will be read in with the following order:
\par (Delay 0, Wavelength 0)
\par (Delay 1, Wavelength 0)
\par (Delay 2, Wavelength 0)
\par . . .
\par (Delay NTau - 1, Wavelength 0)
\par (Delay 0, Wavelength 1)
\par (Delay 1, Wavelength 1)
\par etc.
\par \fs24 
\par \fs20 
\par The data values can be separated by any white space (a space, tab, or new line [carriage return]).
\par 
\par Here is an example header (don't include the text comments!):
\par 128            // Delay points
\par 450            // Wavelength points
\par 10             // fs per pixel
\par \pard\tx355 0.123        // nm per pixel
\par 413.7        // wavelength of center pixel
\par 1.420\tab -2.030\tab 1.0\tab -1.200\tab 0.000   // data
\par \fs24 
\par 
\par }
22
Outputs_Tab
Outputs Tab
Output Directory;Outputs Tab;Phase Blanking



Imported



FALSE
19
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;\red0\green128\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Outputs Tab\cf0\fs24 
\par \fs20 
\par The Outputs tab controls the location and style of the \strike output files\strike0\{linkID=5\}.
\par 
\par \cf2\{bmc bm33.BMP\}\cf0 
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Output Directory for Files:\b0  selects the directory where the \strike output files\strike0\{linkID=5\} will be saved.
\par 
\par \b Output Format:\b0  When set to Classic, this will output the standard files documented \strike here\strike0\{linkID=5\}..If you choose Femtosoft Compatible, the files will be written in the same format as the\f1  \cf3\strike expected input format\cf2\strike0\{linkTarget=FileHeader\}\cf0\f0 , including headers.  This way, you can read in the data from previous runs and use that as input to the FROG algorithm.  Remember, the FROG output format is in constant frequency, so that on the \strike experimental data tab\strike0\{linkID=21\} you'll need to select Order:Delay and Read In As: Constant Frequency (the opposite of most experimental setups).  The output format selection that you make here is persisted, so that you won't need to set it every time you run the program.
\par \fs24 
\par \b\fs20 Phase Blanking Level:\b0  this unit sets the level at which the phase is set to zero. in the electric fields and spectra \strike output files\strike0\{linkID=5\}.  Especially for experimental data, the wings of the retrieved pulse are just noise.  Because the real and imaginary parts of the field are varying independently, the phase in the wings of the field fluctuates wildly.  This can be extremely distracting when plotting the pulse.  If phase blanking is set at 0.0001, for example, then the phase is set to zero for all points where the intensity is less than 0.0001 of the peak intensity.  This affects only the phase in the \strike output file\strike0\{linkID=5\}; the real and imaginary components are still output unchanged.
\par 
\par \b Display Graphics:\b0  when this box is check the FROG algorithm will update the \strike FROG trace\strike0\{linkID=28\} and \strike Electric Field and Spectrum windows\strike0\{linkID=29\} as the algorithm runs.  Updating the graphics slows the algorithm down significantly, so uncheck this box for faster pulse retrieval.  Unexpectedly, the speedup gained becomes smaller as the\f1  \cf3\strike grid size\cf2\strike0\{linkTarget=GridSize\}\cf0\f0  becomes larger.  This is because for larger grids, a larger portion of each iteration of the algorithm is spent on the actual numerics of the pulse retrieval, rather than on the display update.
\par 
\par \b Always Overwrite Results:\b0  When this is checked, FROG will write its results into the selected directory, and silently overwrite any previous runs' files there.  This is useful if you are running a lot of theoretical traces that you are not going to save.  When this item is unchecked, if there are previous data files in the directory a dialog box will appear to warn you.  At this point you can elect to overwrite, cancel the save, or save to a different directory.  With important experimental data files, the recommended usage is to put each data file in its own directory, along with the FROG output files.\fs24 
\par 
\par }
23
First_Guess_Field
First Guess Field
Convergence;Convergence,difficulty in SHG;First Guess Field;Initial Field



Imported



FALSE
23
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 First Guess Field\cf0\fs24 
\par \fs20 
\par The FROG algorithm retrieves pulses from the FROG trace by iteratively improving an electric field that serves as an approximation to the correct field.  The algorithm needs an initial field to begin with.  The First Guess tab provides some control over this field.
\par 
\par In most cases, the selection of the initial field will not have a large effect in how the pulse is retrieved or in the final answer.  On rare occasions, however, we have noticed an effect for \strike SHG\strike0\{linkID=8\} FROG.  There are certain pulses (even \strike theoretically generated\strike0\{linkID=18\} ones) that appear to stagnate for certain initial guesses, yet retrieve with ease for other initial guesses.  Although this is quite uncommon, FROG provides a way of changing the initial field to improve retrieval when these cases arise.
\par 
\par \{bmc bm14.BMP\}
\par 
\par There are four possibilities for the initial field:
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Pure Noise\b0 : the real and imaginary parts of the initial field are filled with uncorrelated white noise.
\par 
\par \b Phase Noise\b0 : this is the default.  The intensity of the initial guess is a Gaussian with a FWHM equal to the square root of the size of the FROG grid (so that a 64 X 64 FROG grid uses a pulse with a FWHM of 8).  The phase of the initial guess is random noise.
\par 
\par \b Intensity Noise\b0 : the phase of the initial guess is zero (imaginary part is always zero), but the intensity is random (i.e., the real part of the field is filled with random numbers).
\par 
\par \b Custom\b0 : the initial field is constructed from the user's input.  The width, linear chirp, and SPM (Self-Phase Modulation) are determined by the user, and the initial field is generated from them.  The intensity is Gaussian.\fs24 
\par \pard\fs20 
\par Limited experience suggests that for SHG traces that do not converge with a Phase Noise initial guess, an Intensity Noise or a transform-limited Gaussian (custom) often works well.\fs24 
\par 
\par }
24
Strategies_Tab
Strategies Tab
Basic FROG Algorithm;Projections;Shortcuts;Strategies;Strategies Tab



Imported



FALSE
45
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Strategies Tab\cf0\fs24 
\par \fs20 
\par Strategies refers to the way the FROG algorithm tries to retrieve the electric field from the FROG trace.  They are named Basic, Projections, etc., and are described in the published literature.  The FROG algorithm is designed to try various strategies in turn, as it is impossible to tell \i a priori\i0  which strategy will perform best for a given pulse.  Because some strategies work better with certain nonlinearities than others, and because some are faster than others, FROG provides the means to change the order of the strategies.
\par 
\par \{bmc bm38.BMP\}
\par 
\par There are several parameters that go with each strategy.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Strategy\b0  - this indicates the name of the strategy (see below).  When clicked on, a drop down list of names to choose from appears.
\par 
\par \b Min. Iterations\b0 : sets the minimum number of iterations that the strategy will run.  After that, the algorithm compares the current FROG error with the error from Min. Iterations before.  If the error has decreased by at least 0.5%, the algorithm continues with the current strategy; otherwise, it proceeds to the next in the list.  When the end of the list is reached, it begins again at the top.
\par 
\par \b Start Field\b0 : determines what type of field to begin with when this strategy is first used.  If the number in Start Field is less than 0, the current retrieved field is kept and the algorithm proceeds.  If Start Field is zero, the field with the globally lowest FROG error so far is used.  If Start Field is greater than zero, the best field is perturbed with random noise.  For example, if Start Field is 0.5, the best field is normalized to a peak intensity of unity, then a random intensity and phase field with peak intensity 0.5 is added to it.
\par 
\par \b Shortcut\b0 : determines how often the Shortcut method should be used.  Shortcuts are described below.\fs24 
\par \pard 
\par \b\fs28 Types of Strategies\b0\fs24 
\par \fs20 
\par The strategies are described in detail in the published scientific literature, especially in Kenneth W. DeLong and Rick Trebino, "Improved ultrashort pulse-retrieval algorithm for Frequency-Resolved Optical Gating," \i Journ. Optical Society of America A\i0 , vol. \b 11\b0 , 2429-2437 (1994), and in Kenneth W. DeLong, David N. Fittinghoff, Rick Trebino, Bern Kohler, and Kent Wilson, "Pulse retrieval in Frequency-Resolved Optical Gating based on the method of generalized projections," \i Opt. Lett\i0 ., vol. \b 19\b0 , 2152-2154 (1994).\fs24 
\par 
\par \pard\fi-355\li715\b\fs20 Basic\b0 : the basic FROG algorithm described in the references above.  The modified signal field is integrated over tau to get the new electric field.
\par 
\par \b Expo\b0 : when replacing the retrieved pulse's signal-field intensity with the target FROG trace's intensity, the overcorrection scheme described in the JOSA A paper above is applied.
\par 
\par \b Inten. Gate\b0 : the intensity constraint method mentioned in the JOSA A paper is used to generate a new intensity for the retrieved pulse.  Every third iteration is performed with the Basic strategy.
\par 
\par \b Projections\b0 : uses the method of Generalized Projections described in the Optics Letter above.
\par 
\par \b Proj. - Overstep\b0 : uses the Projection strategy, then creates a new field by "over-applying" the correction: \cf2\{bmc bm39.gif\}\cf0 .
\par 
\par \b Minimization FR\b0 : performs a direct minimization of the FROG trace error using the Fletcher-Reeves method as described in the JOSA A paper above.  This minimization is extremely slow for larger FROG grid sizes.
\par 
\par \b Minimization PR\b0 : performs a direct minimization of the FROG trace error using the Polak-Ribiere method as described in the JOSA A paper above.  This minimization is extremely slow for larger FROG grid sizes.
\par \fs24 
\par \pard\b\fs28 Shortcuts\b0\fs24 
\par \fs20 
\par Shortcuts are a special-purpose technique to speed up initial convergence of the algorithm.  An as-yet unpublished paper by Marco Krumbuegel and Rick Trebino describe the mathematics of this technique.  Shortcuts appear to speed the algorithm by allowing the retrieval to jump out of local minima and approach the global minimum more closely.  At errors of less that 1e-7, however, Shortcuts appear to hinder the convergence, rather than aid it.  This is not usually a concern, since 1) no experimental data has ever come close to this level of convergence, and 2) at such low levels of error, the algorithm is already in the global minimum and normal projections or other algorithms work just as quickly.
\par 
\par Here is a graph showing the FROG error versus iteration for a theoretical, transform-limit pulse, using Projections with Shortcuts, and Projections without Shortcuts.  See how the retrieval using Shortcuts initially converges faster, but stalls at about 1e-7.
\par 
\par \{bmc bm40.BMP\}\fs24 
\par 
\par }
25
Input_Data_for_Read_In_Field
Input Data for Read-In Field
Downsizing;File Format;File Format,read-in field;Header;Header,read-in field;Input Data for Read-In Field;Interpolate;Truncate



Imported



FALSE
40
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Input Data for Read-In Field\cf0\fs24 
\par \fs20 
\par The FROG algorithm can begin with a target FROG trace that is calculated from an electric field stored in a file.  This field may have been made by FROG or any other program.
\par 
\par \{bmc bm25.BMP\}
\par -\fs24 
\par \b\fs28 Calibrations\b0\fs24 
\par \fs20 
\par Only one calibration is require for reading in an electric field.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Center Wavelength\b0  - this is the wavelength of the carrier frequency that the field is centered at.  (The electric fields used in this program are all slowly-varying complex envelopes.  To get a real electric field, a carrier frequency must be added).  If the field data were Fourier transformed, this is the wavelength that would corresponds to the zero frequency value.
\par \fs24 
\par \pard\b\fs28 Downsizing Options\b0\fs24 
\par \fs20 
\par This option is used if the number of points in the electric field to be read in is larger than the\f1  \cf2\strike grid size\cf3\strike0\{linkTarget=GridSize\}\cf0\f0 .  This option determines how the field will be fit onto the grid.  If the interpolate option is selected, the electric field will be reduced in size by using a windowed average to average adjacent points together.  The truncate option will simply discard the results at the beginning and end of the file.  For example, if the electric field file has 128 points, and the grid size is 64, then interpolate will average the points in the file pairwise, while truncate will only read points 32 to 95.  If the grid size is larger than the number of points in the file, the field will be padded with zeroes.
\par 
\par \fs24 
\par \b\fs28 Use Header Information Check Box\b0\fs24 
\par \fs20 
\par Checking this box will cause the FROG program to read the center wavelength from the data file header.  Unchecking the box will clear the value and reset the file input to the beginning of the file.
\par 
\par \fs24 
\par \b\fs28 Header and File Format\b0\fs24 
\par \fs20 
\par The header of the file consists of the central wavelength, followed by the actual data::
\par 
\par Center Wavelength
\par Data. . .
\par 
\par The data block has the format
\par time1 intensity1 phase1 real1 imaginary1
\par time2 intensity2 phase2 real2 imaginary2
\par etc.
\par 
\par The program ignores the second and third values in each line, and constructs the electric field from the last two columns (the real and imaginary parts of the electric field).  This is the same format used for \strike output\strike0\{linkID=5\} of the FROG results, so that files generated by the FROG program can then be read back in.  The time units for the first column are in femtoseconds.  The center wavelength refers to the carrier frequency of the electric field.  Data that is generated numerically should have the carrier frequency removed (leaving just the slowly-varying envelope).
\par \fs24 
\par 
\par }
26
FROG_Sampling_Rate
FROG Sampling Rate
FROG Sampling Rate;Sampling rate



Imported



FALSE
26
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Sampling Rate\cf0\fs24 
\par \fs20 
\par FROG is a time-frequency technique.  This leads not only to the elegance and richness of FROG, but also some counter-intuitive behavior.
\par 
\par For example, it's clear that when measuring a quantity like an autocorrelation, decreasing the time step of the data always results in a better measurement.  However, in FROG, this is not always true.  Sampling too densely in either the time or frequency domain may actually make the trace more difficult to retrieve.  Although there is no mathematical proof, it appears that a trace that is sampled nearly equally in both domains provides the most robust retrieval.  Even sampling also allows the trace to be retrieved on a minimum sized grid, leading to a quicker retrieval.
\par 
\par The optimum sampling rate \i M\i0  is defined as the rate that samples the electric field at the same rate in both the time and frequency domain.  For example, if \i M\i0  = 10, then the time step is one-tenth of the temporal FWHM, and the spectral step size is one-tenth of the spectral FWHM.  A simple calculation yields\fs24 
\par \cf2\f1\fs20\{bmc bm9.gif\}\cf0\f0\fs24 
\par \fs20 
\par For a transform-limited Gaussian pulse this simplifies to \fs24 
\par \cf2\f1\fs20\{bmc bm10.gif\}\cf0\f0\fs24 
\par \fs20 
\par For example, for a 64 X 64 trace, \i M\i0  = 5.3.  This means that a pulse with a 100 fs FWHM should be sampled every 19 fs.
\par 
\par For a pulse with Gaussian intensity in the frequency domain, the maximum value for the time step is\fs24 
\par \cf2\f1\fs20\{bmc bm11.gif\}\cf0\f0\fs24 
\par \fs20 
\par and the minimum time step value for a pulse with a Gaussian temporal intensity is\fs24 
\par \cf2\f1\fs20\{bmc bm12.gif\}\cf0 .\f0\fs24 
\par \fs20 
\par 
\par The FROG sampling rate is discussed in detail in Kenneth W. DeLong, David N. Fittinghoff, and Rick Trebino, "Practical Issues in Ultrashort-Laser-Pulse Measurement Using Frequency-Resolved Optical Gating," \i IEEE Journ. Quant. Electr\i0 ., vol. \b 32\b0 , 1253-1264 (1996).\fs24 
\par 
\par }
27
FROG_Pulse_Retrieval_Windows
FROG Pulse Retrieval Windows
FROG Pulse Retrieval Windows



Imported



FALSE
25
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Pulse Retrieval Windows\cf0\fs24 
\par \fs20 
\par When retrieving a pulse, the program presents several screens that allow the user to monitor the progress of the algorithm.
\par 
\par \{bmc bm8.SHG\}
\par 
\par The windows include:
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Target FROG Trace\strike0\{linkID=28\}: the original FROG trace that the algorithm is trying to match.
\par 
\par \strike Retrieved FROG Trace\strike0\{linkID=28\}: the FROG trace of the current retrieved field.
\par 
\par \strike Electric Field\strike0\{linkID=29\}: shows the intensity and phase of the retrieved and original (if available) electric fields in the time domain.
\par 
\par \strike Spectrum\strike0\{linkID=29\}: shows the intensity and phase of the retrieved and original (if available) electric fields in the frequency domain.\fs24 
\par \fs20 
\par \strike Algorithm Control\strike0\{linkID=6\}: controls the starting, stopping, and pausing of the algorithm.
\par 
\par \strike FROG Error Graph\strike0\{linkID=30\}: plots the FROG error versus iteration.
\par 
\par \strike Results\strike0\{linkID=4\}: displays the widths and time-bandwidth products of the original pulse (if applicable) and the retrieved pulse.
\par 
\par }
28
FROG_Trace_Windows
FROG Trace Windows
Color Table;Displays;Displays,FROG traces;FROG trace windows



Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Trace Windows\cf0\fs24 
\par 
\par \fs20 When the program is retrieving a pulse, two windows containing FROG traces are shown on the left hand side of the screen.  The upper trace is the Target FROG Trace.  This is the original trace that the FROG program is attempting to invert.  Below it is the Retrieved FROG Trace, which is the FROG trace of the current retrieved electric field for that iteration.  When these two traces are identical, the FROG algorithm has converged.
\par 
\par \{bmc bm13.BMP\}
\par 
\par The retrieved FROG trace window is updated every iteration for the first 10 iterations, and every fifth iteration after that.  This speeds the algorithm, as drawing the screen is a slow operation.
\par 
\par The FROG trace windows can be selected and copied to the clipboard when the algorithm is paused, or after it has finished.  The windows can also be resized while the algorithm is running.  FROG traces are shown in the standard format, with delay along the horizontal axis and frequency along the vertical axis.
\par \fs24 
\par \pard\sb115\b\fs20 Copying and Printing the FROG Trace Windows\b0\fs24 
\par \pard\fs20 
\par Right-clicking on the Field windows will bring up a pop-up menu with the options "Print" and Copy".  "Print" will send the image of the fields to the printer, while "Copy" will send the image to the Clipboard.  These functions perform a direct bitmap copy, and as such are relatively rudamentory.  If more control is needed over the output, it is better to use the\f1  \cf2\strike output files\cf3\strike0\{linkTarget=EFieldFiles\}\cf0\f0 .\fs24 
\par 
\par \b\fs28 FROG Trace Color Table\b0\fs24 
\par \fs20 
\par In order to enhance the important wings of the trace, the square root of the intensity is plotted in the FROG windows.  The color table used has 100 entries, so that the cutoff between the black (lowest) areas and the red areas is at an intensity of 0.0001 of the peak intensity of the trace.  Except for high-precision, high-dynamic-range measurements, values smaller than this are usually not significant.
\par \fs24 
\par 
\par }
29
Electric_Field_and_Spectrum_Windows
Electric Field and Spectrum Windows
Displays;Displays,electric fields;Electric Field and Spectrum Windows;Phase scale



Imported



FALSE
24
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Electric Field and Spectrum Windows\cf0\fs24 
\par \fs20 
\par While the algorithm is retrieving a pulse, the field windows appear next to the FROG trace windows.  The upper window displays the laser pulse's electric field in the time domain, while the lower one displays the frequency domain.
\par 
\par \{bmc bm2.BMP\}
\par 
\par When \strike generating an electric field from theory\strike0\{linkID=18\}, or \strike reading in a field from disk\strike0\{linkID=2\}, the field windows display two fields at the same time - both the original (target) field and the current retrieved field.  In the case of a target FROG trace that is experimentally generated, the electric field of the original pulse is not known beforehand, so only the retrieved field is plotted in the field windows.  The different colors are used as follows:
\par \fs24 
\par \pard\fi-355\li715\fs20 Black - original field intensity
\par Blue - original field phase
\par Green - retrieved field intensity
\par Red - retrieved field phase\fs24 
\par \pard\fs20 
\par The intensity scale is always normalized to a peak of unity with no loss of information, but the phase scale cannot be normalized in this way.  Therefore, at the bottom of each window, the scale of the phase is reported.  For example, if the window says "Max. phase : 2.5 radians," this means that (on that particular iteration) the phase plotted in the window ranges from 0 to 2.5 rad.  Often, the phase will appear to be unchanged from one iteration to the next, but the phase scale is actually changing.
\par 
\par In order to keep the screen output uncluttered, the phase is not plotted for areas where the intensity of the pulse is less than 0.0001 of the peak.  When \strike written to disk\strike0\{linkID=5\}, however, the entire field is output.
\par \fs24 
\par \pard\sb115\b\fs20 Copying and Printing the Field Windows\b0\fs24 
\par \pard\fs20 
\par Right-clicking on the Field windows will bring up a pop-up menu with the options "Print" and Copy".  "Print" will send the image of the fields to the printer, while "Copy" will send the image to the Clipboard.  These functions perform a direct bitmap copy, and as such are relatively rudamentory.  If more control is needed over the output, it is better to use the\f1  \cf2\strike output files\cf3\strike0\{linkTarget=EFieldFiles\}\cf0\f0 .\fs24 
\par 
\par }
30
FROG_Error_Graph
FROG Error Graph
Current Error;FROG Error;FROG Error Graph



Imported



FALSE
9
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Error Graph\cf0\fs24 
\par \fs20 
\par A running graph of the FROG error vs. iteration displayed while the algorithm is retrieving a pulse.  This is done mainly as a convenience for the user who is monitoring the progress of the algorithm.  The visual display helps to decide when the algorithm has reached its minimum error.  When the algorithm changes techniques, the name of the technique will be displayed along a red line that shows at which iteration it began.
\par 
\par \{bmc bm7.BMP\}
\par 
\par }
32
History_of_FROG_Retrievals
History of FROG Retrievals
FROG Error;History of FROG Retrievals;Log



Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 History of FROG Retrievals\cf0\fs24 
\par \fs20 
\par Especially when retrieving experimental data, often it is necessary to try several different combinations of retrieval parameters (noise subtraction and filtering, data extraction, strategy ordering, etc) in order to get the lowest possible error.  It is cumbersome to try to keep track of all of the possible options manually.  The history log is a feature of the FROG program that does this for the user.  The history log is accessed by pressing the speed button marked "L" on the main FROG window.
\par 
\par \{bmc bm16.BMP\}
\par 
\par Every time a FROG retrieval is performed, another line is added to the History log.  The History log records the type of nonlinearity, the grid size, the data file, and also the resulting temporal FWHM of the field and the FROG error of the lowest-error field.
\par 
\par By selecting a row on the History log, and clicking the "Display Log" button, a window appears showing all the information about that particular run (it includes all the information usually included in the\f1  \cf2\strike frog.dat\cf3\strike0\{linkTarget=FrogDatFile\}\cf0  \f0 file).
\par 
\par }
34
TADPOLE_Overview
TADPOLE Overview
TADPOLE Overview



Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Overview\cf0\fs24 
\par \fs20 
\par TADPOLE (Temporal Analysis by Dispersed Pairs of Light E-fields) is a linear method for measuring the intensity and phase of a laser pulse.  TADPOLE is based on spectral interferometry, a technique used for several decades.  Like all linear methods for measuring laser pulses, spectral interferometry requires the presence of a well-known reference pulse.  FROG can measure the intensity and phase of a (stronger) reference pulse; this pulse can then be used to measure almost arbitrarily weak laser pulses.  See the \strike Publications\strike0\{linkID=15\} for published literature.
\par 
\par TADPOLE begins by interfering an unknown (test) pulse and a known (ref) pulse.  The pulses are separated by a time delay.  The spectrum exhibits fringes, the phase of which reflect the phase difference between the test and ref pulses:
\par \fs24 
\par \cf2\f1\fs20\{bmc bm46.gif\}\cf0 
\par 
\par \cf2\{bmc bm47.gif\}\cf0 .\f0\fs24 
\par 
\par \f1\fs20 The TADPOLE spectral intensity develops well-defined fringes, due to the term in the exponential.  The equation for the TADPOLE spectral intensity above can be Fourier transformed.  The transformed function exhibits three peaks: one at DC for first two terms, and two peaks at plus and minus tau from the third and forth terms.  For large enough values of tau, the three peaks are well separated, and one peak can be selected while the other two are filtered out.  This leaves a term like
\par 
\par \cf2\{bmc bm48.gif\}\cf0 
\par 
\par which, when divided by the complex reference field, yields the conjugate of the test pulse!
\par 
\par In practice, division of the fields in this manner often yields spurious results, especially in the wings of the pulse.  However, if the test pulse is strong enough to measure a TADPOLE spectrum, one can usually also measure the spectrum of the pulse.  The TADPOLE algorithm can be configured to use the experimentally measured spectral intensity, rather than the one calculated from the TADPOLE data.  In this case, only the spectral phase is calculated from the TADPOLE data.\f0\fs24 
\par 
\par }
35
TADPOLE_Calibrations
TADPOLE Calibrations
TADPOLE Calibrations



Imported



FALSE
16
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Calibrations\cf0\fs24 
\par \fs20 
\par The TADPOLE algorithm is started by clicking the speed button labeled with at "T" on the FROG main form.  This brings up the TADPOLE Calibrations window.  This window presents three tabs that allow the user to enter the data needed to execute the TADPOLE retrieval.
\par 
\par \{bmc bm42.SHG\}
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 Inputs\strike0\{linkID=36\} - selects the input TADPOLE data and (optionally) the spectrum of the unknown pulse.
\par 
\par \strike Reference\strike0\{linkID=37\} - selects the source for the electric field of the reference pulse
\par 
\par \strike Outputs\strike0\{linkID=39\} - selects the directory where the results will be written to.
\par 
\par 
\par }
36
Tadpole_Inputs_Tab
TADPOLE Inputs Tab
File Format;File Format,TADPOLE input files;TADPOLE Input Files;TADPOLE Input Tab



Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Inputs Tab\cf0\fs24 
\par \fs20 
\par The TADPOLE inputs allow the user to select the input data source for the TADPOLE calculation.
\par 
\par \{bmc bm44.SHG\}
\par 
\par There are two possible file sources to set.
\par \fs24 
\par \pard\fi-355\li715\b\fs20 TADPOLE Spectrum\b0  - the spectrum that contains the TADPOLE data.  The expected format is space-delimited pairs of wavelength (in nm) and spectral intensity.
\par 
\par \b Test Pulse Spectrum\b0  - the spectrum of the pulse being measured.  The spectrum of the test pulse (the pulse being measured) can be calculated in the TADPOLE calculation; however, this is often error-prone, as it involves the division of very small numbers - and in the presence of noise this often can give spurious results.  Constraining the result spectrum to be that of the laboratory measured spectrum usually gives better results.\fs24 
\par 
\par }
37
TADPOLE_Reference_Tab
TADPOLE Reference Tab
File Format;File Format,TADPOLE input files;TADPOLE Reference Field;TADPOLE Reference Tab



Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Reference Tab\cf0\fs24 
\par \fs20 
\par To complete the TADPOLE calculation, the complete intensity and phase of the reference field must be known.  The Reference tab allows the user to select the source for the reference field.
\par 
\par \{bmc bm49.SHG\}
\par 
\par One way to completely characterize the intensity and phase of a reference pulse is with FROG.  Anticipating that users might measure the FROG trace of the reference pulse at the same time as the TADPOLE spectrum of a weaker pulse, the TADPOLE algorithm allows the user to select the pulse previously retrieved with FROG as the reference.  If the FROG algorithm has not been run, the selection is forced to be "Read In from File," and a file containing the reference field must be specified.
\par 
\par The reference field must be in the standard format for\f1  \cf2\strike FROG field output files\cf3\strike0\{linkTarget=EFieldFiles\}\cf0\f0 , such as E.dat and Ek.dat.
\par 
\par }
39
TADPOLE_Output_Tab
TADPOLE Output Tab
TADPOLE Output Directory;TADPOLE Output Tab



Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Output Tab\cf0\fs24 
\par \fs20 
\par This tab allows the user to select the directory where the TADPOLE output files are written.
\par \fs24 
\par \fs20\{bmc bm45.SHG\}
\par 
\par When the "Quit" button is clicked in the TADPOLE Results window, the calculated test field is saved to disk in two files: TadE.dat saves the field in the time domain, and TadSpec.dat saves the same field in the frequency domain.  The format is identical to that used to output the\f1  \cf2\strike FROG electric fields\cf3\strike0\{linkTarget=EFieldFiles\}\cf0\f0 .\fs24 
\par 
\par }
40
TADPOLE_Algorithm_Windows
TADPOLE Algorithm Windows
TADPOLE Algorithm Windows



Imported



FALSE
21
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Algorithm Windows\cf0\fs24 
\par \fs20 
\par After the "OK" button on the TADPOLE Calibrations window is clicked, the windows controlling the TADPOLE algorithm appear.
\par 
\par \{bmc bm41.SHG\}
\par 
\par There are several windows open when TADPOLE is active.
\par \fs24 
\par \pard\fi-355\li715\strike\fs20 TADPOLE Experimental Data\strike0\{linkID=43\} - shows the input TADPOLE spectrum, and the spectrum of the reference pulse.  \fs24 
\par \fs20 
\par \strike TADPOLE Results\strike0\{linkID=42\} - shows the widths etc. of the field calculated with the cutoff selected in the FFT Data window.
\par 
\par \strike FFT Data\strike0\{linkID=41\} - controls the TADPOLE algorithm operation.
\par 
\par \b Electric Field\b0  - shows the current TADPOLE calculated field in the time domain.
\par 
\par \b Spectrum\b0  - the frequency domain equivalent of the field in the Electric Field window.\fs24 
\par 
\par }
41
FFT_Data_Window
FFT Data Window
FFT Data Window;TADPOLE Algorithm;TADPOLE cutoff



Imported



FALSE
19
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FFT Data Window\cf0\fs24 
\par \fs20 
\par The operation of the TADPOLE algorithm is controlled from the FFT Data window.
\par 
\par \{bmc bm5.BMP\}
\par 
\par The \strike TADPOLE algorithm\strike0\{linkID=34\} works by Fourier transforming the TADPOLE data, and then removing the DC term and one of the side lobes.  The black vertical line in the FFT Data window shows where the cutoff is in this filtering operation.  For example, in the above picture, everything to the left of the vertical black line is set to zero before inverse Fourier transforming.  Above the graph, the temporal coordinate of the cutoff line is shown (1539 fs in this case).  Clicking on the FFT Data window with the mouse will set the cutoff line to the position of the mouse cursor.  If the cutoff line is to the left of zero delay, everything to the right of it will be set to zero, and vice versa.  Usually, the cutoff line should be set at the lowest point between the sidelobe and the DC term.
\par 
\par Clicking the right mouse button on this graph will allow the user to toggle the vertical axis between a logarithmic scale and a linear scale.
\par  
\par The TADPOLE algorithm can be used to calculate just the spectral phase of the test pulse, or both the intensity and the phase.  Calculating the spectral intensity of the test pulse involves dividing two small but nearly equal numbers, an operation that is very sensitive to noise.  When calculating the spectral intensity as well as the phase, the Floor input box (upper right-hand corner) becomes active.  This allows the user to select a cutoff value below which the spectral division will not be performed (the result is set automatically to zero for values lower than the cutoff).  There is no \i a priori\i0  method to select a Floor value; only the form of the output spectrum can be a guide here.  If the spectrum has large "wings" that seem to grow far from the center frequency, increase the value of Floor by a factor of 10 or so, and press the "Run" button.
\par 
\par Usually, it is best to measure the spectrum of the test pulse in the laboratory, and use that measurement as the spectral intensity.  The spectrum of the test pulse is selected on the \strike TADPOLE Inputs tab\strike0\{linkID=36\}.
\par 
\par The TADPOLE algorithm executes either when the cutoff line is moved (as a result of a mouse click) or when the "Run" button is clicked.  The widths, time-bandwidths products, etc., of the resultant field are written to the TADPOLE Results window.\fs24 
\par 
\par }
42
TADPOLE_Results_Window
TADPOLE Results Window
TADPOLE Results Window



Imported



FALSE
11
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Results Window\cf0\fs24 
\par \fs20 
\par Each time the TADPOLE algorithm executes, it calculates the widths etc. for the calculated pulse.  The calculated parameters are the same as those in the \strike FROG Results window\strike0\{linkID=4\}.
\par 
\par \{bmc bm50.BMP\}
\par 
\par When the "Quit" button is clicked, the TADPOLE windows are closed, and the output files are written to the directory specified in the \strike TADPOLE Outputs\strike0\{linkID=39\} tab.\fs24 
\par 
\par }
43
TADPOLE_Experimental_Data_Window
TADPOLE Experimental Data Window
TADPOLE Experimental Data Window



Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 TADPOLE Experimental Data Window\cf0\fs24 
\par \fs20 
\par The TADPOLE Experimental Data window shows the TADPOLE spectrum as well as the spectrum of the reference pulse.
\par 
\par \{bmc bm43.BMP\}
\par 
\par The reference pulse spectrum should always be wider than the TADPOLE spectrum.
\par 
\par Clicking the right mouse button allows the user to print this graph.\fs24 
\par 
\par }
44
FROG_Error
FROG Error
FROG Error



Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Symbol;}{\f2\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Error\cf0\fs24 
\par \fs20 
\par The FROG error is basically an rms difference between the target FROG trace and the current retrieved FROG trace.  The target FROG trace is normalized to a peak intensity of unity.
\par 
\par In the case of experimental data, noise is inevitable.  The peak pixel of the target FROG trace may be artificially high, due to corruption by noise.  If we simply normalized the retrieved trace to unity as well, the FROG error would be wrong.  Therefore, we minimize the FROG error G for a given retrieved FROG trace by minimizing with respect to \f1 a\f0  :
\par \fs24 
\par \cf2\f2\fs20\{bmc bm6.gif\}\cf0 .
\par 
\par \f0 This is the definition of the FROG error used in the FROG program.\fs24 
\par \fs20 
\par 
\par 
\par }
45
XFROG_Overview
XFROG Overview
XFROG Overview



Imported



FALSE
12
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 XFROG Overview\cf0\fs24 
\par \fs20 
\par XFROG is a variation of FROG useful for measuring very weak pulses.  Like \strike TADPOLE\strike0\{linkID=34\}, XFROG requires the existence of a well-characterized reference pulse.  Unlike TADPOLE, however, XFROG does not require that the spectra of the test pulse (pulse being measured) and the reference pulse overlap.
\par 
\par In XFROG, the test and reference pulses are mixed in a nonlinear optical interaction.  Whereas in FROG the pulse acts as a gate for itself, in XFROG the reference pulse serves as the gate.  For example, in the case of the second-order nonlinearity, FROG can be described as a frequency-resolved autocorrelation, while XFROG is a frequency-resolved cross-correlation.
\par 
\par There are no restrictions on wavelengths of the test or reference beams, so long as an instantaneous nonlinear optical interaction is available.  The signal beam generated by the interaction of the test and reference beams is used as the input to a spectrometer, and the spectra are measured for various values of the time delay between the test and reference beams.  See the \strike literature\strike0\{linkID=15\} for more details.
\par 
\par \strike XFROG Algorithm\strike0\{linkID=46\}\fs24 
\par }
46
XFROG_Algorithm
XFROG Algorithm
XFROG Algorithm



Imported



FALSE
22
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\fswiss\fcharset0 Arial;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 XFROG Algorithm\cf0\fs24 
\par 
\par \fs20 The operation of the XFROG algorithm is very similar to that of the FROG algorithm.  There are a few notable differences:
\par \fs24 
\par \pard\fi-355\li715\b\fs20 Two sets of calibrations\b0  - the calibrations for both the test and reference pulse must be entered.  The XFROG algorithm presents two windows for this purpose.\fs24 
\par \fs20 
\par \b New Set of Nonlinearities\b0  - While the 3rd-order nonlinearities are relatively unchanged, the set of second-order nonlinearities is changed.  Second-harmonic generation is now more aptly named sum-frequency generation.  And there are two more parametric downconversion processed, named Difference Frequency Generation (1 and 2).
\par 
\par \b Reduced Set of Strategies\b0  - Currently only the basic FROG, the expo, and the XFROG projections \strike strategies\strike0\{linkID=24\} are available.\f1   \cf2\strike Shortcuts\cf3\strike0\{linkID=24\}\cf0  \f0 are available in the XFROG projection algorithm.
\par 
\par \fs24 
\par \pard\b\fs28 Algorithm Description\b0\fs24 
\par 
\par \pard\fi-355\li715\strike\fs20 Test Field Calibrations\strike0\{linkID=47\} - sets the algorithm parameters, and the source of the test field or original XFROG trace.
\par 
\par \strike Reference Field Calibrations\strike0\{linkID=49\} - determines the source of the reference field.
\par 
\par \strike Algorithm Windows\strike0\{linkID=27\} - the same set of algorithm windows seen in the FROG algorithm are used in XFROG.\fs24 
\par 
\par }
47
Test_Calibration_Window
Test Calibration Window
Test Field;XFROG Test Calibration



Imported



FALSE
15
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Test Calibration Window\cf0\fs24 
\par \fs20 
\par This window is used in \strike XFROG\strike0\{linkID=45\} to enter the source for the test field.
\par 
\par \{bmc bm51.SHG\}
\par 
\par The algorithm calibrations of Grid Size and Nonlinearity work similarly to the \strike FROG algorithm calibrations\strike0\{linkID=1\}.  The \strike XFROG nonlinearity\strike0\{linkID=48\} selections are slightly different from FROG.
\par 
\par The different tabs of \strike Initial Field\strike0\{linkID=17\}, \strike Outputs\strike0\{linkID=22\}, \strike First Guess\strike0\{linkID=23\}, and \strike Strategies\strike0\{linkID=24\} are similar to their FROG counterparts.
\par 
\par After OK is selected, the \strike Reference Field Calibrations Window\strike0\{linkID=49\} will appear.
\par 
\par }
48
XFROG_Nonlinearities
XFROG Nonlinearities
DFG;SFG;XFROG Nonlinearities



Imported



FALSE
41
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}{\f1\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red128\green0\blue0;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 XFROG Nonlinearities\cf0\fs24 
\par \fs20 
\par In XFROG, a well-characterized reference pulse is used to measure a weak unknown pulse.  We call the pulse to be measured the test pulse, indicated by the subscript \i t\i0 , while the reference pulse is indicated by the subscript \i r\i0 .
\par 
\par The nonlinearities in XFROG are slightly different from \strike FROG nonlinearities\strike0\{linkID=8\}, including some nonlinear interactions that are not available in FROG.
\par \fs24 
\par \b\fs28 Nonlinear Optical Interactions\b0\fs24 
\par \fs20 
\par There are four possible types of nonlinear interactions, three third order and one second order. \fs24 
\par \pard\sb115\b\fs20 Third order interactions\b0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 PG\ulnone  (Polarization Gate) - commonly generated by Kerr-effect-induced polarization rotation in an isotropic medium.  Can also be generated by so-called "transient-gate" FROG (using a BOXCARS-type phase-matching geometry) or by a cascaded second-order interaction.
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm52.gif\}\cf0\f0\fs24 
\par \pard\fi-355\li715\fs20 
\par \ul SD\ulnone  (Self-Diffraction) - generated by a three-wave mixing geometry (two input beams write a grating in the material, and one of the beams scatters off this grating to produce the [third] output beam).  Can also be generated in a transient-grating geometry or cascaded second-order interactions.
\par \fs24 
\par \pard\qc\cf2\f1\fs20\{bmc bm53.gif\}\cf0\f0\fs24 
\par \pard\fi-355\li715\fs20 
\par \ul THG\ulnone  (Third-Harmonic Generation) - uses a two-input-beam geometry where the signal beam is the third harmonic of the input beam.  Can also be generated by cascaded second-order interactions.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm54.gif\}\cf0\f0\fs24 
\par \pard 
\par \pard\sb115\b\fs20 Second order interactions\b0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 SFG\ulnone  (Sum Frequency Generation) - uses a standard autocorrelation geometry in a frequency-doubling crystal, where the two beams mix together to form the sum frequency.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm55.gif\}\cf0\f0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 DFG1\ulnone  (Difference Frequency Generation Type 1) - Uses a parametric downconversion process to find the difference frequency between the two beams.  In type 1 DFG, the test field is a higher frequency than the reference.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm56.gif\}\cf0\f0\fs24 
\par \pard 
\par \pard\fi-355\li715\ul\fs20 DFG2\ulnone  (Difference Frequency Generation Type 2) - Same as DFG1, but the reference field is a higher frequency than the test field.\fs24 
\par \pard 
\par \pard\qc\cf2\f1\fs20\{bmc bm57.gif\}\cf0\f0\fs24 
\par \pard 
\par 
\par }
49
Reference_Field_Calibrations
Reference Field Calibrations
Reference Field Calibrations;XFROG Reference Field;XFROG Units



Imported



FALSE
13
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 Reference Field Calibrations\cf0\fs24 
\par \fs20 
\par This window is used in \strike XFROG\strike0\{linkID=45\} to select the source of reference field.  This window appears after the \strike test field calibrations\strike0\{linkID=47\} are entered.
\par 
\par \{bmc bm36.BMP\}
\par 
\par There are three sources for the reference field.  It could be generated from theory, it could be the pulse retrieved from the previous FROG retrieval (assuming one exists), or it could be read in from a file on disk.
\par 
\par Be sure to use the same units, Pixel or Real, for the test and reference pulse.  That is, if the test pulse is specified in real units of fs and nm, be sure to specify the reference field in the same units, not in normalized pixel units.  This would produce incorrect results for the output time and frequency calibrations.
\par 
\par }
51
FROG_Algorithm_Overview
FROG Algorithm Overview
Convergence;FROG Algorithm Overview;FROG Error;Initial Field



Imported



FALSE
18
{\rtf1\ansi\deff0{\fonttbl{\f0\fswiss Arial;}}
{\colortbl ;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\f0\fs36 FROG Algorithm Overview\cf0\fs24 
\par \fs20 
\par In the FROG program, we represent laser pulses by the complex electric field envelope of the laser pulse (slowly-varying amplitude approximation).  Every laser pulse envelope corresponds to a FROG trace.  It is trivial to calculate the FROG trace given the electric field of the pulse; however, inverting the FROG trace to find the electric field is a mathematical problem that has no analytic, closed form solution.
\par 
\par The FROG algorithm uses an iterative algorithm to invert FROG traces to find the electric field that created them.  It applies a series of \strike retrieval strategies\strike0\{linkID=24\} based on phase retrieval (these techniques are described in DeLong and Trebino, JOSA A \b 11\b0 , 2429 (1994), and DeLong et al., Opt. Lett. \b 19\b0 , 2152 (1994)).  The algorithm begins with a initial guess for the electric field.  On each subsequent iteration of the algorithm, a new copy of the retrieved electric field and its FROG trace is generated.  Once the retrieved FROG trace matches the original FROG trace to a satisfactory degree, the algorithm is halted.
\par 
\par It is left to the user to decide when to stop the algorithm.  By watching the value of the \strike FROG error\strike0\{linkID=44\}, and also by visually comparing the original FROG trace to the retrieved one, the user can judge either when the agreement is satisfactory, or when the algorithm has hit the noise floor (as set by noise in the experimental data).  In general, for a 64 X 64 pixel FROG trace, a FROG error of 0.0001 can be considered excellent convergence (the error should get smaller with larger traces, as the square root of N).  The user should experiment with stopping the algorithm at various places.
\par 
\par Convergence for experimentally generated FROG traces will always be limited by noise and systematic errors (no matter how small) in the data, so that in this case the algorithm should be allowed to continue until it is clear that the minimum error has been reached.  For FROG traces generated from theory or from electric fields read in from disk, the algorithm will usually converge practically to machine precision.  In this case the user must decide when to halt the algorithm.  When the original and retrieved traces are visually indistinguishable, it does little good to continue running the algorithm.
\par 
\par When the algorithm finishes, the field that produced the lowest \strike FROG error\strike0\{linkID=44\} is used for the \strike Results\strike0\{linkID=4\} and \strike Output\strike0\{linkID=5\}.
\par 
\par The nomenclature that we will use is to call the original FROG trace the "target" FROG trace, and to refer to the new trace and electric field generated on each iteration of the algorithm as "retrieved" quantities.
\par 
\par 
\par }
1
main=,,,,(128,255,255)
0
0
0
6
*InternetLink
16711680
Courier New
0
10
1
....
0
0
0
0
0
0
*ParagraphTitle
-16777208
Arial
0
11
1
B...
0
0
0
0
0
0
*PopupLink
-16777208
Arial
0
8
1
....
0
0
0
0
0
0
*PopupTopicTitle
16711680
Arial
0
10
1
B...
0
0
0
0
0
0
*TopicText
-16777208
Arial
0
10
1
....
0
0
0
0
0
0
*TopicTitle
16711680
Arial
0
16
1
B...
0
0
0
0
0
0
